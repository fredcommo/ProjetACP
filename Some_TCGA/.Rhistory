if(grep('samplePCAfilt', fileName)) markdownText <- "#PCA according to filtering:\n*PCA on samples using different levels of filtering
(left: using selected probes, right: using rejected probes)*"
if(grep('sqDist', fileName)) markdownText <- "#Distances from the center:\n*Distribution of distances (log(d^2)), according to the frequence of zero*"
if(grep('Trace', fileName)) markdownText <- "#Information curve:\n*Samples spread increasing according to the information brought by new probes*"
"#PCA on features:\n*Using 2nd and 3rd axes, high zero frequencies are located at the center*"
if(grepl('Original', fileName)) markdownText <- "#Original PCA:\n*PCA on samples using the full matrix*"
if(grepl('PCAfilt', fileName)) markdownText <- "#PCA on features:\n*Using 2nd and 3rd axes, high zero frequencies are located at the center*"
if(grepl('samplePCAfilt', fileName)) markdownText <- "#PCA according to filtering:\n*PCA on samples using different levels of filtering
(left: using selected probes, right: using rejected probes)*"
if(grepl('sqDist', fileName)) markdownText <- "#Distances from the center:\n*Distribution of distances (log(d^2)), according to the frequence of zero*"
if(grepl('Trace', fileName)) markdownText <- "#Information curve:\n*Samples spread increasing according to the information brought by new probes*"
markdownText
.mkdText <- function(fileName){
if(grepl('Original', fileName)) markdownText <- "###Original PCA:\n*PCA on samples using the full matrix*"
if(grepl('PCAfilt', fileName)) markdownText <- "###PCA on features:\n*Using 2nd and 3rd axes, high zero frequencies are located at the center*"
if(grepl('samplePCAfilt', fileName)) markdownText <- "###PCA according to filtering:\n*PCA on samples using different levels of filtering
(left: using selected probes, right: using rejected probes)*"
if(grepl('sqDist', fileName)) markdownText <- "###Distances from the center:\n*Distribution of distances (log(d^2)), according to the frequence of zero*"
if(grepl('Trace', fileName)) markdownText <- "###Information curve:\n*Samples spread increasing according to the information brought by new probes*"
return(markdownText)
}
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(tmpName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834508"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0('${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}\n', .mkdText(fileName))
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(tmpName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834508"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
l = 3
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(tmpName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834508"')
Folders
folderName
folderName %in% Folders$entity.name
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
folderWiki$attachmentFileHandleIds
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderWikiUri, folderWiki)
cat('wiki pused\n')
?synRestPTU
?synRestPUT
folderWiki
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
.mkdText <- function(fileName){
if(grepl('Original', fileName)) markdownText <- "###Original PCA:\n*PCA on samples using the full matrix.*"
if(grepl('PCAfilt', fileName)) markdownText <- "###PCA on features:\n*Using 2nd and 3rd axes, high zero frequencies are located at the center.*"
if(grepl('samplePCAfilt', fileName)) markdownText <- "###PCA according to filtering:\n*PCA on samples using different levels of filtering
(left: using selected probes, right: using rejected probes).*"
if(grepl('sqDist', fileName)) markdownText <- "###Distances from the center:\n*Distribution of distances (log(d^2)), according to the frequence of zero.*"
if(grepl('Trace', fileName)) markdownText <- "###Information curve:\n*Samples spread increasing according to the information brought by new probes.*"
return(markdownText)
}
listFiles = list.files()
for (l in 2:length(listFiles)){
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(tmpName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834508"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pused\n')
cat('\n')
}
listFiles = list.files()
for (l in 2:length(listFiles)){
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(fileName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834508"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(.mkdText(fileName), '\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pushed\n')
cat('\n')
}
newMarkdown <-  paste0(paste0(.mkdText(fileName), '\n', fileName,' (', propertyValue(file, 'id'), ')'),
'\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
newMarkdown
propertyValue(file, 'id')
file
propertyValues(file, 'id')
propertyValue(file, 'id')
setwd('/Users/fredcommo/Documents/MyProjects/Projet ACP/Some_TCGA/')
Path <- paste0(getwd(), '/')
projectId = 'syn1834778'
myCode <- Code(list(name = "exploreTCGA_PCAfiltering.R", parentId = projectId))
myCode <- addFile(myCode, paste0(Path, 'exploreTCGA_PCAfiltering.R'))
myCode <- storeEntity(myCode)
synIds <- rep(rnaSeqList$entity.id, each = 2)
#####################################
# Push files & create a wiki page
myCode <- getEntity('syn1834520')
myCode <- getEntity('syn1834779')
l = 2
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(fileName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834778"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
propertyValue(file, 'id')
setwd('/Users/fredcommo/Documents/MyProjects/Projet ACP/Some_TCGA/')
Path <- paste0(getwd(), '/')
projectId = 'syn1834783'
myCode <- Code(list(name = "exploreTCGA_PCAfiltering.R", parentId = projectId))
myCode <- addFile(myCode, paste0(Path, 'exploreTCGA_PCAfiltering.R'))
myCode <- storeEntity(myCode)
synIds <- rep(rnaSeqList$entity.id, each = 2)
.mkdText <- function(fileName){
if(grepl('Original', fileName)) markdownText <- "###Original PCA:\n*PCA on samples using the full matrix.*"
if(grepl('PCAfilt', fileName)) markdownText <- "###PCA on features:\n*Using 2nd and 3rd axes, high zero frequencies are located at the center.*"
if(grepl('samplePCAfilt', fileName)) markdownText <- "###PCA according to filtering:\n*PCA on samples using different levels of filtering (left: using selected probes, right: using rejected probes).*"
if(grepl('sqDist', fileName)) markdownText <- "###Distances from the center:\n*Distribution of distances (log(d^2)), according to the frequence of zero.*"
if(grepl('Trace', fileName)) markdownText <- "###Information curve:\n*Samples spread increasing according to the information brought by new probes.*"
return(markdownText)
}
listFiles = list.files()
for (l in 2:length(listFiles)){
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(fileName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834783"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(paste0(.mkdText(fileName), '\n', fileName,' (', propertyValue(file, 'id'), ')'),
'\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pushed\n')
cat('\n')
}
newMarkdown <-  paste0(paste0(.mkdText(fileName), '\n', fileName,' (', propertyValue(file, 'id'), ')'),
'\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
newMarkdown
listFiles = list.files()
for (l in 2:length(listFiles)){
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(fileName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834783"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(paste0(.mkdText(fileName), '\nImage: ', fileName,'\nLocation: ', propertyValue(file, 'id')),
'\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pushed\n')
cat('\n')
}
setwd('/Users/fredcommo/Documents/MyProjects/Projet ACP/Some_TCGA/')
Path <- paste0(getwd(), '/')
projectId = 'syn1834953'
myCode <- Code(list(name = "exploreTCGA_PCAfiltering.R", parentId = projectId))
myCode <- addFile(myCode, paste0(Path, 'exploreTCGA_PCAfiltering.R'))
myCode <- storeEntity(myCode)
synIds <- rep(rnaSeqList$entity.id, each = 2)
#####################################
# Push files & create a wiki page
#myCode <- getEntity('syn1834779')
listFiles = list.files()
for (l in 2:length(listFiles)){
fileName = listFiles[l]
#  synId = synIds[l-1]
#  synId = rnaSeqList$entity.id[i]
splitFileName <- unlist(strsplit(fileName, '_'))
tissue <- splitFileName[2]
synId <- splitFileName[6]
cat(tissue, synId, '\n')
folderName <- paste(tissue, synId, sep = '_')
Folders <- synapseQuery('select id, name from entity where entity.parentId == "syn1834953"')
if(!folderName %in% Folders$entity.name){
# Create a new folder
newFolder <- Folder(name = folderName, parentId = projectId)
newFolder <- synStore(newFolder)
parentId <- propertyValue(newFolder, 'id')
# Create the folder wiki uri.
folderWikiUri <- sprintf("/entity/%s/wiki", parentId)
# Start a wiki, and initialize the markdown as empty.
folderWiki <- list()
folderWiki$attachmentFileHandleIds <- list()
folderWiki$markdown <- c()
folderWiki <- synRestPOST(folderWikiUri, folderWiki)
cat('New folder created\n')
}
# Push the file to the current folder
file <- File(paste0(Path, fileName), parentId = parentId)
file <- synStore(file)
cat(fileName, 'pushed\n')
# Add an activity
rawData <- getEntity(synId)
used(file)<-list(list(entity = myCode, wasExecuted = TRUE),
list(entity = rawData, wasExecuted = FALSE))
file <- synStore(file)
# Update the folder markdown with the new image to display.
folderWiki <- synRestGET(folderWikiUri)
folderUpdateWikiUri <- sprintf("/entity/%s/wiki/%s", parentId, folderWiki$id)
folderWiki$attachmentFileHandleIds[length(folderWiki$attachmentFileHandleIds)+1] <- file@fileHandle$id
newMarkdown <-  paste0(paste0(.mkdText(fileName), '\nImage Location: ', propertyValue(file, 'id')),
'\n${image?synapseId=', propertyValue(file, 'id'),
'&align=None&scale=80}')
folderWiki$markdown <- paste0(folderWiki$markdown, newMarkdown, '\n')
# now 'push' the wiki to Synapse
folderWiki <- synRestPUT(folderUpdateWikiUri, folderWiki)
cat('wiki pushed\n')
cat('\n')
}
source("/Users/fredcommo/Documents/MyProjects/virtualIC50/analysis/data_utils_2.R")
source("/Users/fredcommo/Documents/MyProjects/virtualIC50/analysis/celline_2_tcga_pipeline.R")
library(synapseClient)
source("/Users/fredcommo/Documents/MyProjects/virtualIC50/analysis/JGLibrary.R")
source("/Users/fredcommo/Documents/MyProjects/virtualIC50/analysis/data_utils_2.R")
source("/Users/fredcommo/Documents/MyProjects/virtualIC50/analysis/celline_2_tcga_pipeline.R")
sanger <- getSanger_MetaGenomics()
str(sanger)
getSanger_MetaGenomics
ccle <- getCCLE_MetaGenomics()
getSangerPharma_MetaGenomics()
getSangerPharma_MetaGenomics
getSanger_MetaGenomics
getSangerExpr_MetaGenomics
